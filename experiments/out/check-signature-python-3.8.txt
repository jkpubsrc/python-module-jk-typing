

Python: 3.8.16 (default, Dec  8 2022, 03:43:16) 
[GCC 12.2.1 20220924]


@@>> wrapping function someFunction(..) with checkFunctionSignature() ...
	@@>> Annotations:
		@@>> Annotation for 'vIntOrFloat': typing.Union[int, float]
	@@>> Signature:
		@@>> Signature parameter for 'vIntOrFloat': <Parameter "vIntOrFloat: Union[int, float]">
			|	annotation: typing.Union[int, float]
			|	default: <class 'inspect._empty'>
			|	kind: POSITIONAL_OR_KEYWORD
	@@>> Return annotation: <class 'inspect._empty'>
--
@@ <class 'typing._GenericAlias'>
@@ typing.Union[int, float]
@@ nEnableDebugging = 2
@@ _name           None
@@ __origin__      typing.Union
@@ __args__        (<class 'int'>, <class 'float'>)
@@ _inst           True
@@ __parameters__  ()
@@ _special        False
--
@@ <class 'type'>
@@ <class 'int'>
@@ nEnableDebugging = 2
--
@@ <class 'type'>
@@ <class 'float'>
@@ nEnableDebugging = 2
	@@>> Signature parameter compilation for 'vIntOrFloat':
		|	CTIsType__Union<( argName='vIntOrFloat', sType='Union[int, float]'
		|		__nestedAlternativeCheckFuncs=[
		|			CTIsType<( argName='vIntOrFloat', sType='Union[int, float]'
		|				__expectedType=<class 'int'>
		|			)>
		|			CTIsType<( argName='vIntOrFloat', sType='Union[int, float]'
		|				__expectedType=<class 'float'>
		|			)>
		|		]
		|	)>
@@>> Not using log descend.
